// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.22.3
// source: goldSell.proto

package proto

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OrderStatusEnum int32

const (
	OrderStatusEnum_inProgress OrderStatusEnum = 0
	OrderStatusEnum_Confirmed  OrderStatusEnum = 1
	OrderStatusEnum_Canceled   OrderStatusEnum = 2
	OrderStatusEnum_Delivered  OrderStatusEnum = 3
	OrderStatusEnum_Delivering OrderStatusEnum = 4
)

// Enum value maps for OrderStatusEnum.
var (
	OrderStatusEnum_name = map[int32]string{
		0: "inProgress",
		1: "Confirmed",
		2: "Canceled",
		3: "Delivered",
		4: "Delivering",
	}
	OrderStatusEnum_value = map[string]int32{
		"inProgress": 0,
		"Confirmed":  1,
		"Canceled":   2,
		"Delivered":  3,
		"Delivering": 4,
	}
)

func (x OrderStatusEnum) Enum() *OrderStatusEnum {
	p := new(OrderStatusEnum)
	*p = x
	return p
}

func (x OrderStatusEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderStatusEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_goldSell_proto_enumTypes[0].Descriptor()
}

func (OrderStatusEnum) Type() protoreflect.EnumType {
	return &file_goldSell_proto_enumTypes[0]
}

func (x OrderStatusEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderStatusEnum.Descriptor instead.
func (OrderStatusEnum) EnumDescriptor() ([]byte, []int) {
	return file_goldSell_proto_rawDescGZIP(), []int{0}
}

type GoldWeight int32

const (
	GoldWeight_ounce GoldWeight = 0
	GoldWeight_gram  GoldWeight = 1
	GoldWeight_kg    GoldWeight = 2
)

// Enum value maps for GoldWeight.
var (
	GoldWeight_name = map[int32]string{
		0: "ounce",
		1: "gram",
		2: "kg",
	}
	GoldWeight_value = map[string]int32{
		"ounce": 0,
		"gram":  1,
		"kg":    2,
	}
)

func (x GoldWeight) Enum() *GoldWeight {
	p := new(GoldWeight)
	*p = x
	return p
}

func (x GoldWeight) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GoldWeight) Descriptor() protoreflect.EnumDescriptor {
	return file_goldSell_proto_enumTypes[1].Descriptor()
}

func (GoldWeight) Type() protoreflect.EnumType {
	return &file_goldSell_proto_enumTypes[1]
}

func (x GoldWeight) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GoldWeight.Descriptor instead.
func (GoldWeight) EnumDescriptor() ([]byte, []int) {
	return file_goldSell_proto_rawDescGZIP(), []int{1}
}

type Order struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Price       *Price                 `protobuf:"bytes,2,opt,name=price,proto3" json:"price,omitempty"`
	User        *User                  `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	Gold        *Gold                  `protobuf:"bytes,4,opt,name=gold,proto3" json:"gold,omitempty"`
	OrderStatus OrderStatusEnum        `protobuf:"varint,5,opt,name=orderStatus,proto3,enum=SellGold.OrderStatusEnum" json:"orderStatus,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Order) Reset() {
	*x = Order{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goldSell_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_goldSell_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_goldSell_proto_rawDescGZIP(), []int{0}
}

func (x *Order) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Order) GetPrice() *Price {
	if x != nil {
		return x.Price
	}
	return nil
}

func (x *Order) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *Order) GetGold() *Gold {
	if x != nil {
		return x.Gold
	}
	return nil
}

func (x *Order) GetOrderStatus() OrderStatusEnum {
	if x != nil {
		return x.OrderStatus
	}
	return OrderStatusEnum_inProgress
}

func (x *Order) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Order) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type OrderModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId uint32 `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	Gold   *Gold  `protobuf:"bytes,3,opt,name=gold,proto3" json:"gold,omitempty"`
}

func (x *OrderModel) Reset() {
	*x = OrderModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goldSell_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderModel) ProtoMessage() {}

func (x *OrderModel) ProtoReflect() protoreflect.Message {
	mi := &file_goldSell_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderModel.ProtoReflect.Descriptor instead.
func (*OrderModel) Descriptor() ([]byte, []int) {
	return file_goldSell_proto_rawDescGZIP(), []int{1}
}

func (x *OrderModel) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *OrderModel) GetGold() *Gold {
	if x != nil {
		return x.Gold
	}
	return nil
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email       string                 `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	PhoneNumber string                 `protobuf:"bytes,4,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
	Address     string                 `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`
	Country     string                 `protobuf:"bytes,6,opt,name=country,proto3" json:"country,omitempty"`
	City        string                 `protobuf:"bytes,7,opt,name=city,proto3" json:"city,omitempty"`
	Zip         string                 `protobuf:"bytes,8,opt,name=zip,proto3" json:"zip,omitempty"`
	Cvv         string                 `protobuf:"bytes,9,opt,name=cvv,proto3" json:"cvv,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goldSell_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_goldSell_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_goldSell_proto_rawDescGZIP(), []int{2}
}

func (x *User) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *User) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *User) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *User) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *User) GetZip() string {
	if x != nil {
		return x.Zip
	}
	return ""
}

func (x *User) GetCvv() string {
	if x != nil {
		return x.Cvv
	}
	return ""
}

func (x *User) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *User) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type UserModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email       string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	PhoneNumber string `protobuf:"bytes,4,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
	Address     string `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *UserModel) Reset() {
	*x = UserModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goldSell_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserModel) ProtoMessage() {}

func (x *UserModel) ProtoReflect() protoreflect.Message {
	mi := &file_goldSell_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserModel.ProtoReflect.Descriptor instead.
func (*UserModel) Descriptor() ([]byte, []int) {
	return file_goldSell_proto_rawDescGZIP(), []int{3}
}

func (x *UserModel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserModel) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserModel) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *UserModel) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type Gold struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Quantity float32    `protobuf:"fixed32,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Weight   GoldWeight `protobuf:"varint,4,opt,name=weight,proto3,enum=SellGold.GoldWeight" json:"weight,omitempty"`
}

func (x *Gold) Reset() {
	*x = Gold{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goldSell_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Gold) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Gold) ProtoMessage() {}

func (x *Gold) ProtoReflect() protoreflect.Message {
	mi := &file_goldSell_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Gold.ProtoReflect.Descriptor instead.
func (*Gold) Descriptor() ([]byte, []int) {
	return file_goldSell_proto_rawDescGZIP(), []int{4}
}

func (x *Gold) GetQuantity() float32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *Gold) GetWeight() GoldWeight {
	if x != nil {
		return x.Weight
	}
	return GoldWeight_ounce
}

type Id struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Id) Reset() {
	*x = Id{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goldSell_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Id) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Id) ProtoMessage() {}

func (x *Id) ProtoReflect() protoreflect.Message {
	mi := &file_goldSell_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Id.ProtoReflect.Descriptor instead.
func (*Id) Descriptor() ([]byte, []int) {
	return file_goldSell_proto_rawDescGZIP(), []int{5}
}

func (x *Id) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ListOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Orders []*Order `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
}

func (x *ListOrder) Reset() {
	*x = ListOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goldSell_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrder) ProtoMessage() {}

func (x *ListOrder) ProtoReflect() protoreflect.Message {
	mi := &file_goldSell_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrder.ProtoReflect.Descriptor instead.
func (*ListOrder) Descriptor() ([]byte, []int) {
	return file_goldSell_proto_rawDescGZIP(), []int{6}
}

func (x *ListOrder) GetOrders() []*Order {
	if x != nil {
		return x.Orders
	}
	return nil
}

type ListUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*User `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *ListUser) Reset() {
	*x = ListUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goldSell_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUser) ProtoMessage() {}

func (x *ListUser) ProtoReflect() protoreflect.Message {
	mi := &file_goldSell_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUser.ProtoReflect.Descriptor instead.
func (*ListUser) Descriptor() ([]byte, []int) {
	return file_goldSell_proto_rawDescGZIP(), []int{7}
}

func (x *ListUser) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

type Price struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Price float32 `protobuf:"fixed32,1,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *Price) Reset() {
	*x = Price{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goldSell_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Price) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Price) ProtoMessage() {}

func (x *Price) ProtoReflect() protoreflect.Message {
	mi := &file_goldSell_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Price.ProtoReflect.Descriptor instead.
func (*Price) Descriptor() ([]byte, []int) {
	return file_goldSell_proto_rawDescGZIP(), []int{8}
}

func (x *Price) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

var File_goldSell_proto protoreflect.FileDescriptor

var file_goldSell_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x67, 0x6f, 0x6c, 0x64, 0x53, 0x65, 0x6c, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x53, 0x65, 0x6c, 0x6c, 0x47, 0x6f, 0x6c, 0x64, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb9, 0x02, 0x0a, 0x05, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x53, 0x65, 0x6c, 0x6c, 0x47, 0x6f, 0x6c, 0x64, 0x2e, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x65, 0x6c, 0x6c, 0x47,
	0x6f, 0x6c, 0x64, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x22,
	0x0a, 0x04, 0x67, 0x6f, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53,
	0x65, 0x6c, 0x6c, 0x47, 0x6f, 0x6c, 0x64, 0x2e, 0x47, 0x6f, 0x6c, 0x64, 0x52, 0x04, 0x67, 0x6f,
	0x6c, 0x64, 0x12, 0x3b, 0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x53, 0x65, 0x6c, 0x6c, 0x47, 0x6f,
	0x6c, 0x64, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x6e,
	0x75, 0x6d, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x48, 0x0a, 0x0a, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x04, 0x67,
	0x6f, 0x6c, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x65, 0x6c, 0x6c,
	0x47, 0x6f, 0x6c, 0x64, 0x2e, 0x47, 0x6f, 0x6c, 0x64, 0x52, 0x04, 0x67, 0x6f, 0x6c, 0x64, 0x22,
	0xc4, 0x02, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x7a, 0x69, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x7a, 0x69, 0x70, 0x12, 0x10,
	0x0a, 0x03, 0x63, 0x76, 0x76, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x76, 0x76,
	0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x71, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x20, 0x0a,
	0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x50, 0x0a, 0x04, 0x47, 0x6f, 0x6c,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x2c, 0x0a,
	0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e,
	0x53, 0x65, 0x6c, 0x6c, 0x47, 0x6f, 0x6c, 0x64, 0x2e, 0x47, 0x6f, 0x6c, 0x64, 0x57, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x14, 0x0a, 0x02, 0x49,
	0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x34, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x27,
	0x0a, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x53, 0x65, 0x6c, 0x6c, 0x47, 0x6f, 0x6c, 0x64, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x22, 0x30, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x65, 0x6c, 0x6c, 0x47, 0x6f, 0x6c, 0x64, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22, 0x1d, 0x0a, 0x05, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x2a, 0x5d, 0x0a, 0x0f, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x0e, 0x0a, 0x0a, 0x69,
	0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x65, 0x64, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x65, 0x64, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x69, 0x6e, 0x67, 0x10, 0x04, 0x2a, 0x29, 0x0a, 0x0a, 0x47, 0x6f, 0x6c, 0x64, 0x57,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x09, 0x0a, 0x05, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x10, 0x00,
	0x12, 0x08, 0x0a, 0x04, 0x67, 0x72, 0x61, 0x6d, 0x10, 0x01, 0x12, 0x06, 0x0a, 0x02, 0x6b, 0x67,
	0x10, 0x02, 0x32, 0xf0, 0x01, 0x0a, 0x0c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x4a, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x14, 0x2e, 0x53, 0x65, 0x6c, 0x6c, 0x47, 0x6f, 0x6c, 0x64, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x1a, 0x0f, 0x2e, 0x53, 0x65, 0x6c, 0x6c, 0x47,
	0x6f, 0x6c, 0x64, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x0e, 0x3a, 0x01, 0x2a, 0x22, 0x09, 0x2f, 0x6e, 0x65, 0x77, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x51, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x0f,
	0x2e, 0x53, 0x65, 0x6c, 0x6c, 0x47, 0x6f, 0x6c, 0x64, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a,
	0x0f, 0x2e, 0x53, 0x65, 0x6c, 0x6c, 0x47, 0x6f, 0x6c, 0x64, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x3a, 0x01, 0x2a, 0x1a, 0x15, 0x2f, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x69, 0x64, 0x2f, 0x7b, 0x69,
	0x64, 0x7d, 0x12, 0x41, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x6c, 0x64, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x0e, 0x2e, 0x53, 0x65, 0x6c, 0x6c, 0x47, 0x6f, 0x6c, 0x64, 0x2e, 0x47, 0x6f,
	0x6c, 0x64, 0x1a, 0x0f, 0x2e, 0x53, 0x65, 0x6c, 0x6c, 0x47, 0x6f, 0x6c, 0x64, 0x2e, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x22, 0x10, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0a, 0x3a, 0x01, 0x2a, 0x22, 0x05,
	0x2f, 0x67, 0x6f, 0x6c, 0x64, 0x32, 0x83, 0x03, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x43, 0x0a, 0x0c, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x42, 0x79, 0x49, 0x64, 0x12, 0x0c, 0x2e, 0x53, 0x65, 0x6c, 0x6c, 0x47, 0x6f, 0x6c, 0x64,
	0x2e, 0x49, 0x64, 0x1a, 0x0e, 0x2e, 0x53, 0x65, 0x6c, 0x6c, 0x47, 0x6f, 0x6c, 0x64, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x12, 0x0d, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x2f, 0x69, 0x64, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x41, 0x0a, 0x0a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x2e, 0x53, 0x65, 0x6c, 0x6c, 0x47,
	0x6f, 0x6c, 0x64, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x1a, 0x0e, 0x2e, 0x53, 0x65, 0x6c, 0x6c, 0x47,
	0x6f, 0x6c, 0x64, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d,
	0x3a, 0x01, 0x2a, 0x22, 0x08, 0x2f, 0x6e, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x12, 0x4d, 0x0a,
	0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x2e, 0x53, 0x65,
	0x6c, 0x6c, 0x47, 0x6f, 0x6c, 0x64, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x1a, 0x0e, 0x2e, 0x53, 0x65,
	0x6c, 0x6c, 0x47, 0x6f, 0x6c, 0x64, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x22, 0x1f, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x19, 0x3a, 0x01, 0x2a, 0x1a, 0x14, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x2f, 0x69, 0x64, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x57, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x42, 0x79, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x0e, 0x2e, 0x53, 0x65, 0x6c, 0x6c, 0x47, 0x6f, 0x6c, 0x64, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x1a, 0x13, 0x2e, 0x53, 0x65, 0x6c, 0x6c, 0x47, 0x6f, 0x6c, 0x64, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12,
	0x14, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x69, 0x64,
	0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x44, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x12, 0x0e, 0x2e, 0x53, 0x65, 0x6c, 0x6c, 0x47, 0x6f, 0x6c, 0x64, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x1a, 0x12, 0x2e, 0x53, 0x65, 0x6c, 0x6c, 0x47, 0x6f, 0x6c, 0x64, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x22, 0x11, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0b,
	0x12, 0x09, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x61, 0x6c, 0x6c, 0x42, 0x08, 0x5a, 0x06, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_goldSell_proto_rawDescOnce sync.Once
	file_goldSell_proto_rawDescData = file_goldSell_proto_rawDesc
)

func file_goldSell_proto_rawDescGZIP() []byte {
	file_goldSell_proto_rawDescOnce.Do(func() {
		file_goldSell_proto_rawDescData = protoimpl.X.CompressGZIP(file_goldSell_proto_rawDescData)
	})
	return file_goldSell_proto_rawDescData
}

var file_goldSell_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_goldSell_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_goldSell_proto_goTypes = []interface{}{
	(OrderStatusEnum)(0),          // 0: SellGold.OrderStatusEnum
	(GoldWeight)(0),               // 1: SellGold.GoldWeight
	(*Order)(nil),                 // 2: SellGold.Order
	(*OrderModel)(nil),            // 3: SellGold.OrderModel
	(*User)(nil),                  // 4: SellGold.User
	(*UserModel)(nil),             // 5: SellGold.UserModel
	(*Gold)(nil),                  // 6: SellGold.Gold
	(*Id)(nil),                    // 7: SellGold.Id
	(*ListOrder)(nil),             // 8: SellGold.ListOrder
	(*ListUser)(nil),              // 9: SellGold.ListUser
	(*Price)(nil),                 // 10: SellGold.Price
	(*timestamppb.Timestamp)(nil), // 11: google.protobuf.Timestamp
}
var file_goldSell_proto_depIdxs = []int32{
	10, // 0: SellGold.Order.price:type_name -> SellGold.Price
	4,  // 1: SellGold.Order.user:type_name -> SellGold.User
	6,  // 2: SellGold.Order.gold:type_name -> SellGold.Gold
	0,  // 3: SellGold.Order.orderStatus:type_name -> SellGold.OrderStatusEnum
	11, // 4: SellGold.Order.created_at:type_name -> google.protobuf.Timestamp
	11, // 5: SellGold.Order.updated_at:type_name -> google.protobuf.Timestamp
	6,  // 6: SellGold.OrderModel.gold:type_name -> SellGold.Gold
	11, // 7: SellGold.User.created_at:type_name -> google.protobuf.Timestamp
	11, // 8: SellGold.User.updated_at:type_name -> google.protobuf.Timestamp
	1,  // 9: SellGold.Gold.weight:type_name -> SellGold.GoldWeight
	2,  // 10: SellGold.ListOrder.orders:type_name -> SellGold.Order
	4,  // 11: SellGold.ListUser.users:type_name -> SellGold.User
	3,  // 12: SellGold.OrderService.CreateOrder:input_type -> SellGold.OrderModel
	2,  // 13: SellGold.OrderService.UpdateOrder:input_type -> SellGold.Order
	6,  // 14: SellGold.OrderService.GetGoldPrice:input_type -> SellGold.Gold
	7,  // 15: SellGold.UserService.FindUserById:input_type -> SellGold.Id
	4,  // 16: SellGold.UserService.CreateUser:input_type -> SellGold.User
	4,  // 17: SellGold.UserService.UpdateUser:input_type -> SellGold.User
	4,  // 18: SellGold.UserService.GetAllOrdersByUser:input_type -> SellGold.User
	4,  // 19: SellGold.UserService.GetAllUsers:input_type -> SellGold.User
	2,  // 20: SellGold.OrderService.CreateOrder:output_type -> SellGold.Order
	2,  // 21: SellGold.OrderService.UpdateOrder:output_type -> SellGold.Order
	10, // 22: SellGold.OrderService.GetGoldPrice:output_type -> SellGold.Price
	4,  // 23: SellGold.UserService.FindUserById:output_type -> SellGold.User
	4,  // 24: SellGold.UserService.CreateUser:output_type -> SellGold.User
	4,  // 25: SellGold.UserService.UpdateUser:output_type -> SellGold.User
	8,  // 26: SellGold.UserService.GetAllOrdersByUser:output_type -> SellGold.ListOrder
	9,  // 27: SellGold.UserService.GetAllUsers:output_type -> SellGold.ListUser
	20, // [20:28] is the sub-list for method output_type
	12, // [12:20] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_goldSell_proto_init() }
func file_goldSell_proto_init() {
	if File_goldSell_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_goldSell_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Order); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goldSell_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goldSell_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goldSell_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goldSell_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Gold); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goldSell_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Id); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goldSell_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goldSell_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goldSell_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Price); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_goldSell_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_goldSell_proto_goTypes,
		DependencyIndexes: file_goldSell_proto_depIdxs,
		EnumInfos:         file_goldSell_proto_enumTypes,
		MessageInfos:      file_goldSell_proto_msgTypes,
	}.Build()
	File_goldSell_proto = out.File
	file_goldSell_proto_rawDesc = nil
	file_goldSell_proto_goTypes = nil
	file_goldSell_proto_depIdxs = nil
}
