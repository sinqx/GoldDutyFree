syntax = "proto3";

package SellGold;

option go_package = "/proto";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

service OrderService {

  rpc CreateOrder(OrderModel) returns(Order){
    option (google.api.http) = {
      post: "/newOrder"
      body: "*"
    };
  }

  rpc UpdateOrder(Order) returns(Order){
    option (google.api.http) = {
      put: "/Order/update/id/{id}"
      body: "*"
    };
  }

  rpc GetGoldPrice(Gold) returns(Price){
    option(google.api.http) = {
      post: "/gold"
      body: "*"
    };
  }
}

service UserService {
  rpc FindUserById(Id) returns(User){
    option(google.api.http) = {
      get: "/user/id/{id}"
    };
  }

  rpc CreateUser(User) returns(User){
    option(google.api.http) = {
      post: "/newUser"
      body: "*"
    };
  }

  rpc UpdateUser(User) returns(User){
    option(google.api.http) = {
      put: "/user/update/id/{id}"
      body: "*"
    };
  }

  rpc GetAllOrdersByUser(User) returns(ListOrder){
    option(google.api.http) = {
      get: "/user/orders/id/{id}"
    };
  }

  rpc GetAllUsers(User) returns(ListUser){
    option(google.api.http) = {
      get: "/user/all"
    };
  }
}

message Order {
  uint32 id = 1;
  Price price = 2;
  User user = 3;
  Gold gold = 4;
  OrderStatusEnum orderStatus = 5;
  google.protobuf.Timestamp created_at = 6;
  google.protobuf.Timestamp updated_at = 7;
}

message OrderModel{
  uint32 userId = 2;
  Gold gold = 3;
}

message User {
  uint32 id = 1;
  string name = 2;
  string email = 3;
  string phoneNumber = 4;
  string address = 5;
  string country = 6;
  string city = 7;
  string zip = 8;
  string cvv = 9;
  google.protobuf.Timestamp created_at = 10;
  google.protobuf.Timestamp updated_at = 11;
}

message UserModel {
  string name = 2;
  string email = 3;
  string phoneNumber = 4;
  string address = 5;
}

message Gold {
  float quantity = 2;
  GoldWeight weight = 4;
}

message Id{
  uint32 id = 1;
}

message ListOrder {
  repeated Order orders = 1;
}

message ListUser {
  repeated User users = 1;
}

message Price {
  float price = 1;
}

enum OrderStatusEnum {
  inProgress = 0;
  Confirmed = 1;
  Canceled = 2;
  Delivered = 3;
  Delivering = 4;
}

enum GoldWeight {
  ounce = 0;
  gram = 1;
  kg = 2;
}
